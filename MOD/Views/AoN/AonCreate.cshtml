@model MOD.Models.SaveAcqProjectMasterViewModel
@*@using Syncfusion.EJ2
@using Syncfusion.EJ2.DropDowns*@
@{
    ViewBag.Title = "AonCreate";
}

<div class="card flex-fill w-100 p-4">
    <div class="row mb-2 mb-xl-3">
        <div class="col-auto d-none d-sm-block">
            <h2 class="mb-0">Create AoN</h2>
        </div>
    </div>

    @using (Html.BeginForm("AonCreate", "AoN", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-row mb-1">
            <div class="col-md-12 mb-3">
                <label class="labeltext font-weight-bold mb-0">Item Name<span class="danger">*</span>:</label>
                @Html.TextAreaFor(x => x.item_description, new { @class = "form-control", @placeholder = "Item" })
                @Html.ValidationMessageFor(x => x.item_description, null, new { @class = "danger" })
            </div>
        </div>
        <div class="form-row mb-1">
            <div class="col-md-4 mb-3">
                <label class="labeltext font-weight-bold mb-0">DAC/DPB Meeting<span class="danger">*</span>:</label>
                @*@Html.DropDownListFor(x => x.meeting_id, new SelectList(Model.MeetingMaster, "meeting_id", "dac_dpb"), "-Select Meeting-", new { @class = "form-control" })*@
                <select name="meeting_id" class="form-control">
                    <option value="0">-Select-</option>
                    @foreach (var item in Model.MeetingMaster)
                    {
                        <option value="@item.meeting_id">@item.dac_dpb - @item.meeting_date.Value.ToString("dd-MMM-yyyy")</option>
                    }
                </select>
                @Html.ValidationMessageFor(x => x.meeting_id, null, new { @class = "danger" })
            </div>

            <div class="col-md-4 mb-3">
                <label class="labeltext font-weight-bold mb-0">AoN Date<span class="danger">*</span>:</label>
                <input type="date" id="defaultRegisterFormFirstName" name="Date_of_Accord_of_AoN" class="form-control" placeholder="Date of AoN">
                @Html.ValidationMessageFor(x => x.Date_of_Accord_of_AoN, null, new { @class = "danger" })
            </div>

            <div class="col-md-4 mb-3">
                <label class="labeltext font-weight-bold mb-0">Quantity:</label>
                @Html.TextBoxFor(x => x.Quantity, new { @class = "form-control", @placeholder = "Quantity" })
                @Html.ValidationMessageFor(x => x.Quantity, null, new { @class = "danger" })
            </div>

            <div class="col-md-4 mb-3">
                <label class="labeltext font-weight-bold mb-0">Cost(in Crs):</label>
                @Html.TextBoxFor(x => x.Cost, new { @class = "form-control", @placeholder = "Cost" })
                @Html.ValidationMessageFor(x => x.Cost, null, new { @class = "danger" })
            </div>

            <div class="col-md-4 mb-3">
                <label class="labeltext font-weight-bold mb-0">Currency:</label>
                @Html.DropDownListFor(model => model.Currency, new List<SelectListItem>
                   {
                    new SelectListItem{ Text="INR", Value = "INR" },
                    new SelectListItem{ Text="USD", Value = "USD" },
                    new SelectListItem{ Text="EUR", Value = "EUR" },
                   }, "-Select Currency-", new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Currency, null, new { @class = "danger" })
            </div>

            <div class="col-md-4 mb-3">
                <label class="labeltext font-weight-bold mb-0">Tax & Duties:</label>
                @Html.DropDownListFor(model => model.Tax_Duties, new List<SelectListItem>
                   {
                    new SelectListItem{ Text="Inclusive Tax & Duties", Value = "Inclusive Tax & Duties" },
                    new SelectListItem{ Text="Exclusive Tax & Duties", Value = "Exclusive Tax & Duties" },
                   }, "-Select Tax-", new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Tax_Duties, null, new { @class = "danger" })
            </div>
            <div class="col-md-4 mb-3">
                <label class="labeltext font-weight-bold mb-0">Service <span class="danger">*</span>:</label>
                @Html.DropDownListFor(model => model.Service_Lead_Service, new List<SelectListItem>
                   {
                    new SelectListItem{ Text="Army", Value = "Army" },
                    new SelectListItem{ Text="Navy", Value = "Navy" },
                    new SelectListItem{ Text="AirForce", Value = "AirForce" },
                    new SelectListItem{ Text="ICG", Value = "ICG" },
                    new SelectListItem{ Text="Joint", Value = "Joint" },
                   }, "-Select Services-", new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Service_Lead_Service, null, new { @class = "danger" })
            </div>

            <div class="col-md-4 mb-3">

                <label class="labeltext font-weight-bold mb-0">Nature:</label>
                @Html.DropDownListFor(model => model.Type_of_Acquisition, new List<SelectListItem>
                 {
                   new SelectListItem{ Text="Initial", Value = "Initial" },
                   new SelectListItem{ Text="Repeat", Value = "Repeat" },
                   new SelectListItem{ Text="Option", Value = "Option" },
                   new SelectListItem{ Text="Indent", Value = "Indent" },
                   new SelectListItem{ Text="D&D", Value = "D&D" },
                 }, "-Select-", new { @class = "form-control" })
                @*@Html.ValidationMessageFor(x => x.Type_of_Acquisition, null, new { @class = "danger" })*@
            </div>
            <div class="col-md-4 mb-3">
                <label class="labeltext font-weight-bold mb-0">Categorization <span class="danger">*</span>:</label>

                @Html.DropDownListFor(model => model.Categorisation, new List<SelectListItem>
              {
                new SelectListItem{ Text="Buy(Indian-IDDM)", Value = "Buy(Indian-IDDM)" },
                new SelectListItem{ Text="Buy(Indian)", Value = "Buy(Indian)" },
                new SelectListItem{ Text="Buy and Make(Indian)", Value = "Buy and Make(Indian)" },
                new SelectListItem{ Text="Buy and Make", Value = "Buy and Make" },
                new SelectListItem{ Text="Buy(Global-Manufacture in India)", Value = "Buy(Global-Manufacture in India)" },
                new SelectListItem{ Text="Buy(Global-Manufacture in India)-IGA", Value = "Buy(Global-Manufacture in India)-IGA" },
                new SelectListItem{ Text="Buy(Global)", Value = "Buy(Global)" },
                new SelectListItem{ Text="Buy(Global)-IGA", Value = "Buy(Global)-IGA" },
                new SelectListItem{ Text="Buy(Global)-FMS Route", Value = "Buy(Global)-FMS Route" },
                new SelectListItem{ Text="Design & Development", Value = "Design & Development" },
                new SelectListItem{ Text="IGA", Value = "IGA" },
                new SelectListItem{ Text="Make", Value = "Make" },
                new SelectListItem{ Text="Sp Model", Value = "Sp Model" },
                new SelectListItem{ Text="Make-I", Value = "Make-I" },
                new SelectListItem{ Text="Make-II", Value = "Make-II" },
                new SelectListItem{ Text="Make-III", Value = "Make-III" },
              }, "-Select Categorization-", new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Categorisation, null, new { @class = "danger" })
            </div>

            <div class="col-md-4 mb-3">
                <label class="labeltext font-weight-bold mb-0">IC Percentage:</label>
                @Html.TextBoxFor(x => x.IC_percentage, new { @class = "form-control", @placeholder = "IC Percentage" })
                @Html.ValidationMessageFor(x => x.IC_percentage, null, new { @class = "danger" })
            </div>

            <div class="col-md-4 mb-3">
                <label class="labeltext font-weight-bold mb-0">Trial Required:</label>
                @Html.DropDownListFor(model => model.Trials_Required, new List<SelectListItem>
                   {
                      new SelectListItem{ Text="Y", Value = "Y" },
                      new SelectListItem{ Text="N", Value = "N" },
                   }, "--Select--", new { @class = "form-control" })
                @*@Html.ValidationMessageFor(x => x.item_description, null, new { @class = "danger" })*@
            </div>

            <div class="col-md-4 mb-3">
                <label class="labeltext font-weight-bold mb-0">Option Clause Applicable:</label>
                @Html.DropDownListFor(model => model.Option_clause_applicable, new List<SelectListItem>
                   {
                      new SelectListItem{ Text="Y", Value = "Y" },
                      new SelectListItem{ Text="N", Value = "N" },
                   }, "--Select--", new { @class = "form-control" })
                @*@Html.ValidationMessageFor(x => x.item_description, null, new { @class = "danger" })*@
            </div>

            <div class="col-md-4 mb-3">
                <label class="labeltext font-weight-bold mb-0">Offset Applicable:</label>
                @Html.DropDownListFor(model => model.Offset_applicable, new List<SelectListItem>
                   {
                      new SelectListItem{ Text="Y", Value = "Y" },
                      new SelectListItem{ Text="N", Value = "N" },
                   }, "--Select--", new { @class = "form-control" })
                @*@Html.ValidationMessageFor(x => x.item_description, null, new { @class = "danger" })*@
            </div>

            <div class="col-md-4 mb-3">
                <label class="labeltext font-weight-bold mb-0">AMC Applicable:</label>
                @Html.DropDownListFor(model => model.AMC_applicable, new List<SelectListItem>
                   {
                      new SelectListItem{ Text="Y", Value = "Y" },
                      new SelectListItem{ Text="N", Value = "N" },
                   }, "--Select--", new { @class = "form-control" })
                @*@Html.ValidationMessageFor(x => x.item_description, null, new { @class = "danger" })*@
            </div>

            <div class="col-md-4 mb-3">
                <label class="labeltext font-weight-bold mb-0">AMC Remarks:</label>
                @Html.TextBoxFor(x => x.AMCRemarks, new { @class = "form-control", @placeholder = "AMC Remarks" })
                @*@Html.ValidationMessageFor(x => x.IC_percentage, null, new { @class = "danger" })*@
            </div>
            <div class="col-md-4 mb-3">
                <label class="labeltext font-weight-bold mb-0">Warranty Applicable:</label>
                @Html.DropDownListFor(model => model.Warrenty_applicable, new List<SelectListItem>
                   {
                      new SelectListItem{ Text="Y", Value = "Y" },
                      new SelectListItem{ Text="N", Value = "N" },
                   }, "--Select--", new { @class = "form-control" })
                @*@Html.ValidationMessageFor(x => x.item_description, null, new { @class = "danger" })*@
            </div>

            <div class="col-md-4 mb-3">
                <label class="labeltext font-weight-bold mb-0">Warranty Remarks:</label>
                @Html.TextBoxFor(x => x.Warrenty_Remarks, new { @class = "form-control", @placeholder = "AMC Remarks" })
                @*@Html.ValidationMessageFor(x => x.IC_percentage, null, new { @class = "danger" })*@
            </div>

            <div class="col-md-4 mb-3">
                <label class="labeltext font-weight-bold mb-0">AON Validity:</label>
                @Html.TextBoxFor(x => x.AoN_validity, new { @class = "form-control", @placeholder = "AON Validity" })
            </div>

            <div class="col-md-4 mb-3">
                <label class="labeltext font-weight-bold mb-0">AON Validity Unit:</label>
                @Html.DropDownListFor(model => model.AoN_validity_unit, new List<SelectListItem>
                   {
                      new SelectListItem{ Text="Month", Value = "Month" },
                      new SelectListItem{ Text="Year", Value = "Year" },
                   }, "--Select--", new { @class = "form-control" })
                @*@Html.ValidationMessageFor(x => x.item_description, null, new { @class = "danger" })*@
            </div>
            <div class="col-md-4 mb-3">
                <label class="labeltext font-weight-bold mb-0">DPP/DAP:</label>
                @Html.DropDownListFor(model => model.DPP_DAP, new List<SelectListItem>
                   {
                  new SelectListItem{ Text="DPP-2016", Value = "DPP-2016" },
                      new SelectListItem{ Text="DAP-2020", Value = "DAP-2020" },
                      new SelectListItem{ Text="DPP-2002", Value = "DPP-2016" },
                      new SelectListItem{ Text="DPP-2005", Value = "DPP-2020" },
                      new SelectListItem{ Text="DPP-2006", Value = "DPP-2020" },
                      new SelectListItem{ Text="DPP-2008", Value = "DPP-2020" },
                      new SelectListItem{ Text="DPP-2011", Value = "DPP-2020" },
                      new SelectListItem{ Text="DPP-2013", Value = "DPP-2020" },
                   }, "--Select--", new { @class = "form-control" })
                @*@Html.ValidationMessageFor(x => x.item_description, null, new { @class = "danger" })*@
            </div>

            <div class="col-md-4 mb-3">
                <label class="labeltext font-weight-bold mb-0">System Case <span class="danger">*</span>:</label>
                @Html.DropDownListFor(model => model.System_case, new List<SelectListItem>
                   {
                      new SelectListItem{ Text="Y", Value = "Y" },
                      new SelectListItem{ Text="N", Value = "N" },
                   }, "--Select--", new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.System_case, null, new { @class = "danger" })
            </div>

            @*Changes in Aon Registration*@
            <div class="col-md-4 mb-3">
                <div class="col">
                    <label class="labeltext font-weight-bold mb-0">vendors: </label>
                    <select class="form-control" id="VendorsIDs" name="VendorsIDs">
                        <option value="">--select vendor category--</option>
                        @foreach (var item in Model.VendorList)
                        {
                            <option value="@item.vendorID">@item.VendorName</option>
                        }
                    </select>
                    @*@Html.ListBoxFor(x => x.item_description,
                new MultiSelectList(Model.VendorList, "vendorID", "VendorName")
                , new { @class = "chzn-select", data_placeholder = "Tags..." })*@
                    @*@Html.DropDownList("VendorsIDs", (List<SelectListItem>)Model.VendorList, new { multiple = "multiple" })*@
                    @*@Html.EJS().MultiSelect("local").Placeholder("Select category").DataSource((IEnumerable<Model.VendorList>)ViewBag.localdata).Fields(new MultiSelectFieldSettings { Text = "VendorName", Value = "vendorID" }).Value((string[])ViewBag.val).Render()*@
                </div>
            </div>

            <div class="col-md-4 mb-3">
                <label class="labeltext font-weight-bold mb-0">Directorate:</label>
                @Html.DropDownListFor(x => x.DirectorateId, new SelectList(Model.SectionMasterList, "section_id", "section_descr"), "--Select Section--", new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.DirectorateId, null, new { @class = "danger" })
            </div>
            <div class="col-md-4 mb-3">
                <label class="labeltext font-weight-bold mb-0">Responsible Person(Level-1):</label>
                @Html.DropDownListFor(x => x.ResponsiblePersonLeve1, new SelectList(Model.UserList, "UserId", "UserName"), "--Select User--", new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.UserId, null, new { @class = "danger" })
            </div>
            <div class="col-md-4 mb-3">
                <label class="labeltext font-weight-bold mb-0">Level-2 Officer:</label>
                @Html.DropDownListFor(x => x.ResponsiblePersonLeve2, new SelectList(Model.UserList, "UserId", "UserName"), "--Select User--", new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.UserId, null, new { @class = "danger" })
            </div>
            <div class="col-md-4 mb-3">
                <label class="labeltext font-weight-bold mb-0">Level-3 Officer:</label>
                @Html.DropDownListFor(x => x.ResponsiblePersonLeve3, new SelectList(Model.UserList, "UserId", "UserName"), "--Select User--", new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.UserId, null, new { @class = "danger" })
            </div>
            <div class="col-md-4 mb-3">
                <label class="labeltext font-weight-bold mb-0">Level-4 Officer:</label>
                @Html.DropDownListFor(x => x.ResponsiblePersonLeve4, new SelectList(Model.UserList, "UserId", "UserName"), "--Select User--", new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.UserId, null, new { @class = "danger" })
            </div>
            <div class="col-md-4 mb-3">
                <label class="labeltext font-weight-bold mb-0">AoN type<span class="danger">*</span> :</label>
                @Html.DropDownListFor(model => model.AonType, new List<SelectListItem>
                   {                 
                      new SelectListItem{ Text="Nomination basis", Value = "Nomination basis" },
                      new SelectListItem{ Text="Competitive Tendering", Value = "Competitive Tendering" },                      
                   }, "--Select--", new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.AonType, null, new { @class = "danger" })
            </div>
        </div>
        <div class="form-row mb-1">
            <div class="col-md-12 mb-3">
                <label class="labeltext font-weight-bold mb-0">Essential Parameter:</label>
                @Html.TextAreaFor(x => x.Essential_parameters, new { @class = "form-control", @placeholder = "Essential Parameter" })
                @Html.ValidationMessageFor(x => x.Essential_parameters, null, new { @class = "danger" })
            </div>
        </div>
        <div class="form-row mb-1">
            <div class="col-md-12 mb-3">
                <label class="labeltext font-weight-bold mb-0">Any Other Aspect:</label>
                @Html.TextAreaFor(x => x.Any_other_aspect, new { @class = "form-control", @placeholder = "Any Other Aspect" })
            @*@Html.ValidationMessageFor(x => x.Any_other_aspect, null, new { @class = "danger" })*@
                        </div>
                    </div>
                    <div class="form-row mb-1">
                        <div class="col-md-12 mb-3">
                            <label class="labeltext font-weight-bold mb-0">Remarks:</label>
                            @Html.TextAreaFor(x => x.Remarks, new { @class = "form-control", @placeholder = "Remarks" })
            @*@Html.ValidationMessageFor(x => x.IC_percentage, null, new { @class = "danger" })*@
            </div>
        </div>
        <button class="btn btn-primary float-right" type="submit">AoN Register</button>
    }
</div>

<script>
    $("#ResponsiblePersonLeve1").change(function () {
        var userLevel1 = $("#ResponsiblePersonLeve1").val();
        var userLevel2 = $("#ResponsiblePersonLeve2").val();
        var userLevel3 = $("#ResponsiblePersonLeve3").val();
        var userLevel4 = $("#ResponsiblePersonLeve4").val();

        if (userLevel1 != "" || userLevel2 != "") {
            if (userLevel1 == userLevel2) {
                alert("This user is already selected.Please select another user");
                $(this).prop("selectedIndex", 0).val();
            }
        }

        if (userLevel3 != "") {
            if (userLevel1 == userLevel3 || userLevel2 == userLevel3) {
                alert("This user is already selected.Please select another user");
                $(this).prop("selectedIndex", 0).val();
            }
        }
        if (userLevel4 != "") {
            if (userLevel1 == userLevel4 || userLevel2 == userLevel4 || userLevel3 == userLevel4) {
                alert("This user is already selected.Please select another user");
                $(this).prop("selectedIndex", 0).val();

            }
        }
    });

    $("#ResponsiblePersonLeve2").change(function () {
        var userLevel1 = $("#ResponsiblePersonLeve1").val();
        var userLevel2 = $("#ResponsiblePersonLeve2").val();
        var userLevel3 = $("#ResponsiblePersonLeve3").val();
        var userLevel4 = $("#ResponsiblePersonLeve4").val();

        if (userLevel1 != "" || userLevel2 != "") {
            if (userLevel1 == userLevel2) {
                alert("This user is already selected.Please select another user");
                $(this).prop("selectedIndex", 0).val();
            }
        }

        if (userLevel3 != "") {
            if (userLevel1 == userLevel3 || userLevel2 == userLevel3) {
                alert("This user is already selected.Please select another user");
                $(this).prop("selectedIndex", 0).val();
            }
        }
        if (userLevel4 != "") {
            if (userLevel1 == userLevel4 || userLevel2 == userLevel4 || userLevel3 == userLevel4) {
                alert("This user is already selected.Please select another user");
                $(this).prop("selectedIndex", 0).val();

            }
        }
    });

    $("#ResponsiblePersonLeve3").change(function () {
        var userLevel1 = $("#ResponsiblePersonLeve1").val();
        var userLevel2 = $("#ResponsiblePersonLeve2").val();
        var userLevel3 = $("#ResponsiblePersonLeve3").val();
        var userLevel4 = $("#ResponsiblePersonLeve4").val();

        if (userLevel1 != "" || userLevel2 != "") {
            if (userLevel1 == userLevel2) {
                alert("This user is already selected.Please select another user");
                $(this).prop("selectedIndex", 0).val();
            }
        }

        if (userLevel3 != "") {
            if (userLevel1 == userLevel3 || userLevel2 == userLevel3) {
                alert("This user is already selected.Please select another user");
                $(this).prop("selectedIndex", 0).val();
            }
        }
        if (userLevel4 != "") {
            if (userLevel1 == userLevel4 || userLevel2 == userLevel4 || userLevel3 == userLevel4) {
                alert("This user is already selected.Please select another user");
                $(this).prop("selectedIndex", 0).val();

            }
        }
    });

    $("#ResponsiblePersonLeve4").change(function () {
        var userLevel1 = $("#ResponsiblePersonLeve1").val();
        var userLevel2 = $("#ResponsiblePersonLeve2").val();
        var userLevel3 = $("#ResponsiblePersonLeve3").val();
        var userLevel4 = $("#ResponsiblePersonLeve4").val();

        if (userLevel1 != "" || userLevel2 != "") {
            if (userLevel1 == userLevel2) {
                alert("This user is already selected.Please select another user");
                $(this).prop("selectedIndex", 0).val();
            }
        }

        if (userLevel3 != "") {
            if (userLevel1 == userLevel3 || userLevel2 == userLevel3) {
                alert("This user is already selected.Please select another user");
                $(this).prop("selectedIndex", 0).val();
            }
        }
        if (userLevel4 != "") {
            if (userLevel1 == userLevel4 || userLevel2 == userLevel4 || userLevel3 == userLevel4) {
                alert("This user is already selected.Please select another user");
                $(this).prop("selectedIndex", 0).val();

            }
        }
    });
    $(document).ready(function () {
        $("#VendorsIDs").chosen({

        });
    });
</script>




